log(0)
sort(unique(dflong$Solicitudes))[3]
log(2)
skewness(dflong$Solicitudes)
skewness(log(dflong$Solicitudes))
sort(unique(dflong$Solicitudes))[0]
sort(unique(dflong$Solicitudes))[1]
sort(unique(dflong$Solicitudes))[2]
sort(unique(dflong$Solicitudes))[3]
log(1)
log(0.00001)
skewness(log(dflong$Solicitudes + 0.000001))
hist(log(dflong$Solicitudes + 0.000001))
View(dataschools)
log(0.000001)
log(1.000001)
log(2.000001)
log(1)
log(2)
log(3)
log(4)
log(20)
log(67)
hist(log(dflong$Solicitudes[dflong$Solicitudes > 0]))
skewness(log(dflong$Solicitudes[dflong$Solicitudes > 0]))
skewness(log(dflong$Solicitudes + 0.0000000001))
hist(log(dflong$Solicitudes + 0.0000000001))
log(1)
log(1.0000000001)
log(2.0000000001)
log(2)
summary(dflong$Solicitudes)
hist(log(dflong$Solicitudes + 9))
skewness(log(dflong$Solicitudes + 9))
chile
summary(chile)
table(chile$LENGTH)
summary(dflong$Solicitudes)
skewness(log(dflong$Solicitudes + 5))
skewness(log(dflong$Solicitudes + 9))
skewness(log(dflong$Solicitudes + 1))
skewness(log(dflong$Solicitudes + 2))
skewness(log(dflong$Solicitudes + 3))
table(dflong$Solicitudes)
summary
(dflong$Solicitudes)
summary(dflong$Solicitudes)
table(dflong$Solicitudes)
skewness(log(dflong$Solicitudes + 3))
hist(log(dflong$Solicitudes + 3))
hist(log(dflong$Solicitudes + 2))
hist(log(dflong$Solicitudes + 1))
hist(log(dflong$Solicitudes + 0))
skewness(log(dflong$Solicitudes + 0))
skewness(log(dflong$Solicitudes + 1))
skewness(log(dflong$Solicitudes + 2))
skewness(log(dflong$Solicitudes + 3))
skewness(log(dflong$Solicitudes + 4))
log(2 + 2)
log(1)
log(2)
?log
exp(1)
2.718282^0.6931472
log(4)
exp(1.386294)
skewness(log(dflong$Solicitudes + 2))
densityPlot(log(dflong$Solicitudes + 2))
library(boot)
lengthboot <- boot(dflong$Solicitudes, function(x,i) skewness(x[i]),
R = 2000)
boot.ci(lengthboot)
hist(log(dflong$Solicitudes + 2))
densityPlot(log(dflong$Solicitudes + 2))
skewness(log(dflong$Solicitudes + 2))
booter <- boot(log(dflong$Solicitudes + 2), function(x,i) skewness(x[i]),
R = 2000)
boot.ci(booter)
rm(list = ls()
)
dataschools <- read.csv("3_Data_Munging/csv_files/DataSchools.csv",
colClasses=c(NA, NA, rep("NULL", 8), rep(c("NULL", NA), 5),
rep(NA, 6)))
df <- dataschools[complete.cases(dataschools[,3:7]),]
df$Solicitudes_2017.2018 = NA
df <- df[, c(1:7, 14, 8:13)]
dflong <- reshape(df, varying = 3:14, sep = "_",
timevar = "Curso", direction = "long")
dflong$Curso <- as.factor(round(dflong$Curso, 0))
dflong2017 <- subset(dflong, Curso == 2017)
dflong_train <- subset(dflong, Curso < 2016)
dflong_train <- subset(dflong, as.numeric(Curso) < 2016)
dflong_train <- subset(dflong, numeric(Curso) < 2016)
?numeric
str(dflong)
levels(dflong$Curso)
as.numeric(levels(dflong$Curso))
dflong_train <- subset(dflong, as.numeric(levels(Curso)) < 2016)
dflong_test <- subset(dflong, Curso == 2016)
dflong2017 <- subset(dflong, Curso == 2017)
dflong <- subset(dflong, Curso != 2017)
summary(dflong$Solicitudes)
hist(dflong$Solicitudes)
skewness(dflong$Solicitudes)
booter <- boot(dflong$Solicitudes, function(x,i) skewness(x[i]),
R = 2000)
boot.ci(booter)
hist(log(dflong$Solicitudes + 2))
densityPlot(log(dflong$Solicitudes + 2))
skewness(log(dflong$Solicitudes + 2))
booter <- boot(log(dflong$Solicitudes + 2), function(x,i) skewness(x[i]),
R = 2000)
boot.ci(booter)
library(MASS)
?`car-package`
library(car)
qqp(log(dflong$Solicitudes + 2), "norm")
qqp(log(dflong$Solicitudes + 2), "lnorm")
nbinom <- fitdistr(log(dflong$Solicitudes + 2), "Negative Binomial")
solic <- log(dflong$Solicitudes + 2)
summary(solic)
class(solic)
solic[1]
class(solic[1])
type.convert(solic[1])
type(solic[1])
nbinom <- fitdistr(round(log(dflong$Solicitudes + 2), 2), "Negative Binomial")
?fitdistr
x4 <- rnegbin(500, mu = 5, theta = 4)
summary(x4)
nbinom <- fitdistr(dflong$Solicitudes, "Negative Binomial")
qqp(dflong$Solicitudes, "nbinom", size = nbinom$estimate[[1]], mu = nbinom$estimate[[2]])
nbinom$estimate[[1]]
nbinom$estimate[[2]]
nbinom
nbinom$n
nbinom$sd
nbinom$estimate
nbinom$vcov
qqp(dflong$Solicitudes, "norm")
qqp(dflong$Solicitudes, "lnorm")
qqp(log(dflong$Solicitudes + 2), "lnorm")
qqp(dflong$Solicitudes, "lnorm")
qqp(dflong$Solicitudes, "norm")
skewness(dflong$Solicitudes/dflong$PobxBarrio)
hist(dflong$Solicitudes/dflong$PobxBarrio)
densityPlot(dflong$Solicitudes/dflong$PobxBarrio)
skewness(log(dflong$Solicitudes + 2)/dflong$PobxBarrio)
densityPlot(log(dflong$Solicitudes + 2)/dflong$PobxBarrio)
skewness(dflong$PobxBarrio)
hist(dflong$PobxBarrio)
densityPlot(dflong$PobxBarrio)
skewness(log(dflong$PobxBarrio))
skewness(log(dflong$PobxBarrio + 1000))
skewness(log(dflong$PobxBarrio + 500))
skewness(log(dflong$PobxBarrio + 100))
skewness(log(dflong$PobxBarrio + 200))
densityPlot(log(dflong$PobxBarrio + 200))
hist(log(dflong$PobxBarrio + 200))
summary(dflong$PobxBarrio)
densityPlot(dflong$Solicitudes/dflong$PobxBarrio)
skewness(dflong$Solicitudes/dflong$PobxBarrio)
skewness(log(dflong$Solicitudes/dflong$PobxBarrio))
densityPlot(log(dflong$Solicitudes/dflong$PobxBarrio))
densityPlot(log((dflong$Solicitudes + 0.000001)/dflong$PobxBarrio))
skewness(log((dflong$Solicitudes + 0.000001)/dflong$PobxBarrio))
skewness(log(dflong$Solicitudes/dflong$PobxBarrio))
dflong[dflong$Solicitudes == 0,]
qqplot(dflong$Solicitudes)
qqPlot(dflong$Solicitudes)
qqPlot(log(dflong$Solicitudes + 2))
p
qqp(log(dflong$Solicitudes + 2), "norm")
qqnorm(log(dflong$Solicitudes + 2))
?qqplot
qqplot(log(dflong$Solicitudes + 2))
qqplot(y = log(dflong$Solicitudes + 2))
qqnorm(y = log(dflong$Solicitudes + 2))
qqline()
qqline(log(dflong$Solicitudes + 2))
qqPlot(log(dflong$Solicitudes + 2))
?qqPlot
shapiro.test(log(dflong$Solicitudes + 2))
shapiro.test(rnorm(50, 0, 1))
shapiro.test(dflong$Solicitudes)
shapiro.test(log(dflong$Solicitudes + 3))
shapiro.test(log(dflong$Solicitudes + 4))
shapiro.test(log(dflong$Solicitudes + 2))
shapiro.test(log(dflong$Solicitudes + 1))
mod0 <- lm(log(Solicitudes + 2) ~ Colegio, data = dflong_train)
summary(mod0)
mod0b <- glm(log(Solicitudes + 2) ~ Colegio, data = dflong_train,
family = "gaussian")
summary(mod0b)
?glm
mod0b <- lm(log(Solicitudes + 2) ~ 1 + Colegio, data = dflong_train)
summary(mod0b)
mod0$rank
mod0$coefficients
mod0$effects
mod0$fitted.values
mod0$assign
mod0 <- lm(log(Solicitudes + 2) ~ Colegio, data = dflong_train)
summary(mod0)
mod0 <- glm(log(Solicitudes + 2) ~ Colegio, data = dflong_train)
summary(mod0)
dflong_train$colegio2 <- dflong_train$Colegio
for (i in 1:length(levels(dflong_train$colegio2))){
levels(dflong_train$colegio2)[i] = paste0("colegio", i)
}
rm(x4)
View(dflong_train)
mod0 <- glm(log(Solicitudes + 2) ~ colegio2, data = dflong_train)
summary(mod0)
mod0 <- lm(log(Solicitudes + 2) ~ colegio2, data = dflong_train)
summary(mod0)
summary(log(dflong_train$Solicitudes + 2))
summary(dflong$Solicitudes))
summary(dflong$Solicitudes)
summary(dflong_train$Solicitudes)
dataschools <- read.csv("3_Data_Munging/csv_files/DataSchools.csv",
colClasses=c(NA, NA, rep("NULL", 8), rep(c("NULL", NA), 5),
rep(NA, 6)))
df <- dataschools[complete.cases(dataschools[,3:7]),]
df$Solicitudes_2017.2018 = NA
df <- df[, c(1:7, 14, 8:13)]
dflong <- reshape(df, varying = 3:14, sep = "_",
timevar = "Curso", direction = "long")
dflong$Curso <- as.factor(round(dflong$Curso, 0))
summary(dflong$Solicitudes)
dflong2017 <- subset(dflong, Curso == 2017)
dflong <- subset(dflong, Curso != 2017)
summary(dflong$Solicitudes)
summary(dflong$Curso)
dflong_train <- subset(dflong, as.numeric(levels(Curso)) < 2016)
dflong_test <- subset(dflong, Curso == 2016)
summary(dflong_train$Solicitudes)
summary(dflong_test$Solicitudes)
View(dflong2017)
View(dflong)
View(df)
View(dflong)
dflong <- reshape(df, varying = 3:14, sep = "_",
timevar = "Curso", direction = "long")
dflong$Curso <- as.factor(round(dflong$Curso, 0))
View(dflong)
summary(dflong$Solicitudes)
dflong2017 <- subset(dflong, Curso == 2017)
summary(dflong2017$Solicitudes)
dflong <- subset(dflong, Curso != 2017)
summary(dflong$Solicitudes)
dflong_train <- subset(dflong, as.numeric(levels(Curso)) < 2016)
summary(dflong_train$Solicitudes)
dflong_2017 <- subset(dflong, Curso == 2017)
dflong_no2017 <- subset(dflong, Curso != 2017)
dflong <- reshape(df, varying = 3:14, sep = "_",
timevar = "Curso", direction = "long")
dflong$Curso <- as.factor(round(dflong$Curso, 0))
dflong_2017 <- subset(dflong, Curso == 2017)
dflong_no2017 <- subset(dflong, Curso != 2017)
rm(dflong2017)
dflong_train <- subset(dflong_no2017, as.numeric(levels(Curso)) < 2016)
dflong_test <- subset(dflong_no2017, Curso == 2016)
summary(dflong_train$Curso)
summary(dflong_test$Curso)
dflong_no2017$Curso[1:20]
levels(dflong_no2017$Curso)
labels(dflong_no2017$Curso)
levels(labels(dflong_no2017$Curso))
as.numeric(dflong_no2017$Curso)
as.character(dflong_no2017$Curso)
as.numeric(as.character(dflong_no2017$Curso))
dflong_train <- subset(dflong_no2017, as.numeric(as.character(Curso)) < 2016)
dflong_test <- subset(dflong_no2017, Curso == 2016)
summary(dflong_train$Curso)
mod0 <- lm(log(Solicitudes + 2) ~ Colegio, data = dflong_train)
summary(mod0)
mod0b <- lm(log(Solicitudes + 2) ~ 1 + Colegio, data = dflong_train)
summary(mod0b)
scale(dflong_train$Curso)
schools <- read.csv("dl.dropbox.com/s/q5jhoi3k3l80ffc/schools.csv")
schools <- read.csv("https://dl.dropbox.com/s/q5jhoi3k3l80ffc/schools.csv")
View(schools)
str(schools)
dflong <- reshape(df, varying = 3:14, sep = "_",
timevar = "Curso", direction = "long")
dflong$Curso <- round(dflong$Curso, 0)
dflong_2017 <- subset(dflong, Curso == 2017)
dflong_no2017 <- subset(dflong, Curso != 2017)
dflong_train <- subset(dflong_no2017, as.numeric(as.character(Curso)) < 2016)
dflong_test <- subset(dflong_no2017, Curso == 2016)
mod0 <- lm(log(Solicitudes + 2) ~ Colegio, data = dflong_train)
mod0b <- lm(log(Solicitudes + 2) ~ 1 + Colegio, data = dflong_train)
scale(dflong_train$Curso)
summary(dflong_train$Curso)
dflong_train <- subset(dflong_no2017, Curso < 2016)
dflong_test <- subset(dflong_no2017, Curso == 2016)
dflong_test$pred_mod0 <- predict(mod0, dflong_test)
View(dflong_test)
mod1 <- lm(log(Solicitudes + 2) ~ Colegio + scale(Curso), data = dflong_train)
dflong_test$pred_mod1 <- predict(mod1, dflong_test)
View(dflong_test)
mean((dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2)
mean((dflong_test$pred_mod1 - dflong_test$Solicitudes) ** 2)
library(dplyr)
library(ggplot2)
library(lme4)
schools <- read.csv("https://dl.dropbox.com/s/q5jhoi3k3l80ffc/schools.csv")
base <- glm(cbind(applications, population) ~ 1, data = schools, family = "binomial")
fit.nml <- glm(cbind(applications, population) ~ 1 + school, data = schools, family = "binomial")
fit.nml.wtrend <- glm(cbind(applications, population) ~ 1 + school * year, data = schools, family = "binomial")
fit.ml.wtrend <- glmer(cbind(applications, population) ~ 1 + scale(year) + (1 + scale(year)| school), data = schools, family = "binomial")
fit.ml <- glmer(cbind(applications, population) ~ 1 + (1| school), data = schools, family = "binomial")
AIC(base, fit.nml, fit.nml.wtrend, fit.ml.wtrend, fit.ml)
fit <- glm(applications ~ 1 + school, data = schools %>% filter(year < 2016), family = "gaussian")
preds <- schools %>% mutate(
expected_applications = predict(fit, schools)
) %>% filter(year == 2016)
mean((preds$expected_applications - preds$applications) ** 2)
View(preds)
base <- glm(cbind(Solicitudes, PobxBarrio) ~ 1, data = dflong, family = "binomial")
fit.nml <- glm(cbind(Solicitudes, PobxBarrio) ~ 1 + Colegio, data = dflong, family = "binomial")
fit.nml.wtrend <- glm(cbind(Solicitudes, PobxBarrio) ~ 1 + Colegio * Curso, data = dflong, family = "binomial")
fit.ml.wtrend <- glmer(cbind(Solicitudes, PobxBarrio) ~ 1 + scale(Curso) + (1 + scale(Curso)| Colegio), data = dflong, family = "binomial")
fit.ml <- glmer(cbind(Solicitudes, PobxBarrio) ~ 1 + (1| Colegio), data = dflong, family = "binomial")
AIC(base, fit.nml, fit.nml.wtrend, fit.ml.wtrend, fit.ml)
fit <- glm(Solicitudes ~ 1 + Colegio, data = dflong_train), family = "gaussian")
fit <- glm(Solicitudes ~ 1 + Colegio, data = dflong_train, family = "gaussian")
log(4 + 2)
exp(1.791759)
exp(1.791759) - 2
exp(log(4 + 2)) - 2
dflong_test$pred_mod0 <- exp(predict(mod0, dflong_test)) - 2
dflong_test$pred_mod1 <- exp(predict(mod1, dflong_test)) - 2
View(dflong_test)
mean((dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2)
mean((dflong_test$pred_mod1 - dflong_test$Solicitudes) ** 2)
rm(list = ls())
dataschools <- read.csv("3_Data_Munging/csv_files/DataSchools.csv",
colClasses=c(NA, NA, rep("NULL", 8), rep(c("NULL", NA), 5),
rep(NA, 6)))
df <- dataschools[complete.cases(dataschools[,3:7]),]
df$Solicitudes_2017.2018 = NA
df <- df[, c(1:7, 14, 8:13)]
dflong <- reshape(df, varying = 3:14, sep = "_",
timevar = "Curso", direction = "long")
dflong$Curso <- round(dflong$Curso, 0)
dflong_2017 <- subset(dflong, Curso == 2017)
dflong_no2017 <- subset(dflong, Curso != 2017)
dflong_train <- subset(dflong_no2017, Curso < 2016)
dflong_test <- subset(dflong_no2017, Curso == 2016)
mod0 <- lm(Solicitudes ~ Colegio, data = dflong_train)
mod0log <- lm(log(Solicitudes + 2) ~ Colegio, data = dflong_train)
dflong_test$pred_mod0 <- predict(mod0, dflong_test)
dflong_test$pred_mod0log <- exp(predict(mod0log, dflong_test)) - 2
mean((dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2)
mean((dflong_test$pred_mod0log - dflong_test$Solicitudes) ** 2)
View(dflong_test)
round(22.4, 0)
round(22.6, 0)
round(22.5, 0)
round(22.51, 0)
mean((round(dflong_test$pred_mod0log, 0) - dflong_test$Solicitudes) ** 2)
mean((dflong_test$pred_mod0log - dflong_test$Solicitudes) ** 2)
mean((dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2)
mean((round(dflong_test$pred_mod0, 0) - dflong_test$Solicitudes) ** 2)
View(dflong_test)
aggregate(dflong_test, by = list(Barrio), mean((pred_mod0 - Solicitudes)**2))
View(dflong_test)
aggregate(dflong_test, by = list(Barrio), mean((dflong_test$pred_mod0 - dflong_test$Solicitudes)**2))
mean((dflong_test$pred_mod0 - dflong_test$Solicitudes)**2)[1:20]
mean((dflong_test$pred_mod0 - dflong_test$Solicitudes)**2)
aggregate(dflong_test, by = list(Barrio), mean
)
by(dflong_test, Barrio, function(x) mean((pred_mod0 - Solicitudes)**2))
by(dflong_test, dflong_test$Barrio, mean((dflong_test$pred_mod0 - dflong_test$Solicitudes)**2))
aggregate(dflong_test, list(Barrio = dflong_test$Barrio), mean((dflong_test$pred_mod0 - dflong_test$Solicitudes)**2))
aggregate(dflong_test, list(Barrio = dflong_test$Barrio), function(x) mean((dflong_test$pred_mod0[dflong_test$Barrio == x] - dflong_test$Solicitudes[dflong_test$Barrio == x])**2))
by(dflong_test, dflong_test$Barrio, function(x) mean((dflong_test$pred_mod0[dflong_test$Barrio == x] - dflong_test$Solicitudes[dflong_test$Barrio == x])**2))
lapply(dflong_test, dflong_test$Barrio, function(x) mean((dflong_test$pred_mod0[dflong_test$Barrio == x] - dflong_test$Solicitudes[dflong_test$Barrio == x])**2))
tapply(dflong_test, Barrio, function(x) mean((dflong_test$pred_mod0[dflong_test$Barrio == x] - dflong_test$Solicitudes[dflong_test$Barrio == x])**2))
tapply(dflong_test, dflong_test$Barrio, function(x) mean((dflong_test$pred_mod0[dflong_test$Barrio == x] - dflong_test$Solicitudes[dflong_test$Barrio == x])**2))
tapply(dflong_test, dflong_test$Barrio, mean(dflong_test$pred_mod0))
tapply(dflong_test, dflong_test$Barrio, mean)
tapply(dflong_test, dflong_test$Solicitudes, mean)
aggregate(dflong_test$pred_mod0, by = list(Barrio = dflong_test$Barrio), mean)
aggregate(dflong_test$pred_mod0, by = list(Barrio = dflong_test$Barrio), function(x) mean((x - dflong_test$Solicitudes)**2))
aggregate(dflong_test$pred_mod0, by = list(Barrio = dflong_test$Barrio), function(x) mean((x - dflong_test$Solicitudes[dflong_test$Barrio == x])**2))
mean((dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2)
warnings()
View(dflong_test)
aggregate(cbind(predmod0, Solicitudes) ~ Colegio, data = dflong_test, mean)
aggregate(cbind(dflong_text$predmod0, dflong_text$Solicitudes) ~ dflong_text$Colegio, data = dflong_test, mean)
aggregate(cbind(dflong_test$predmod0, dflong_test$Solicitudes) ~ dflong_test$Colegio, data = dflong_test, mean)
mean((dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2)
aggregate((dflong_test$predmod0 - dflong_test$Solicitudes)**2 ~ dflong_test$Colegio, data = dflong_test, mean)
aggregate((dflong_test$predmod0 - dflong_test$Solicitudes) ~ dflong_test$Colegio, data = dflong_test, mean)
aggregate(dflong_test$predmod0 - dflong_test$Solicitudes, list(dflong_test$Colegio), mean)
aggregate(x = (dflong_test$predmod0 - dflong_test$Solicitudes), by = list(dflong_test$Colegio), function = mean)
?aggregate
aggregate(x = dflong_test$predmod0 - dflong_test$Solicitudes, by = list(dflong_test$Colegio), FUN = "mean")
dflong_test$diffs <- (dflong_test$predmod0 - dflong_test$Solicitudes)**2
mean((dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2)
(dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2
dflong_test$diffs <- (dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2
aggregate(x = (dflong_test$pred_mod0 - dflong_test$Solicitudes), by = list(dflong_test$Colegio), function = mean)
aggregate(x = dflong_test$pred_mod0 - dflong_test$Solicitudes, by = list(dflong_test$Colegio), FUN = mean)
aggregate(x = (dflong_test$pred_mod0 - dflong_test$Solicitudes)**2, by = list(dflong_test$Colegio), FUN = mean)
aggregate((dflong_test$pred_mod0 - dflong_test$Solicitudes)**2, by = list(dflong_test$Colegio), FUN = mean)
aggregate((dflong_test$pred_mod0 - dflong_test$Solicitudes)**2, list(dflong_test$Colegio), mean)
dflong_test$diff <- (dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2
View(dflong_test)
mean(dflong_test$diff)
mean((dflong_test$pred_mod0 - dflong_test$Solicitudes) ** 2)
dflong_test$diff <- NA
View(dflong_test)
dflong_test$diff <- NULL
View(dflong_test)
(22.5 - 18)**2
sqrt((22.5 - 18)**2)
aggregate((dflong_test$pred_mod0 - dflong_test$Solicitudes)**2, list(dflong_test$Barrio), mean)
rm(list = ls())
mean((predict(mod0, dslong_test, allow.new.levels = TRUE) - dslong_test$Solicitudes) ** 2)
mean((predict(mod0, dslong_test, type = "response", allow.new.levels = TRUE) - dslong_test$Solicitudes) ** 2)
dataschools <- read.csv("3_Data_Munging/csv_files/DataSchools.csv",
colClasses=c(NA, NA, rep("NULL", 8), rep(NA, 16)))
View(dataschools)
dataschools <- dataschools[complete.cases(dataschools[,3:12]),]
dataschools$Solicitudes_2017.2018 = NA
dataschools$Admisiones_2017.2018 = NA
dataschools <- dataschools[, c(1, 2, 4, 6, 8, 10, 12, 19, 3, 5, 7, 9, 11, 20, 13:18)]
colnames(dataschools) <- gsub("\\..*","", colnames(dataschools))
dslong <- reshape(dataschools, varying = 3:20, sep = "_",
timevar = "Curso", direction = "long")
dslong_2017 <- subset(dslong, Curso == 2017)
dslong_no2017 <- subset(dslong, Curso != 2017)
summary(dslong_no2017$Solicitudes)
hist(dslong_no2017$Solicitudes)
library(e1071)
skewness(dslong_no2017$Solicitudes, na.rm = TRUE)
skewness(dslong_no2017$Solicitudes)
library(boot)
booter <- boot(dslong_no2017$Solicitudes, function(x,i) skewness(x[i]),
R = 2000)
boot.ci(booter)
hist(log(dslong_no2017$Solicitudes + 2))
plot(density(log(dslong_no2017$Solicitudes) + 2))
skewness(log(dslong_no2017$Solicitudes + 2))
booter <- boot(log(dslong_no2017$Solicitudes + 2),
function(x,i) skewness(x[i]),
R = 2000)
boot.ci(booter)
library(car)
qqPlot(log(dslong_no2017$Solicitudes + 2))
shapiro.test(log(dslong_no2017$Solicitudes + 2))
dslong_train <- subset(dslong_no2017, Curso < 2016)
dslong_test <- subset(dslong_no2017, Curso == 2016)
mod0 <- lm(Solicitudes ~ Colegio, data = dslong_train)
mod0log <- lm(log(Solicitudes + 2) ~ Colegio, data = dslong_train)
mean((predict(mod0, dslong_test) - dslong_test$Solicitudes) ** 2)
mean(((exp(predict(mod0log, dslong_test)) - 2) - dslong_test$Solicitudes)**2)
mod1 <- lm(Solicitudes ~ Colegio + Curso, data = dflong_train)
mod1 <- lm(Solicitudes ~ Colegio + Curso, data = dslong_train)
mod1log <- lm(log(Solicitudes + 2) ~ Colegio + Curso, data = dslong_train)
mod1$coefficients
mod1 <- lm(Solicitudes ~ Colegio + scale(Curso), data = dslong_train)
mod1$coefficients
mod1$coefficients[247]
mod1$coefficients[240]
mod1$coefficients[[240]]
dim(mod1$coefficients)
names(mod1$coefficients)
mod1$coefficients[225]
mod1b$coefficients[225]
mod1 <- lm(Solicitudes ~ Colegio + Curso, data = dslong_train)
mod1b$coefficients[225]
mod1$coefficients[225]
mod1 <- lm(Solicitudes ~ Colegio + Curso, data = dslong_train)
mean((predict(mod1, dflong_test) - dflong_test$Solicitudes) ** 2)
mean((predict(mod1, dslong_test) - dslong_test$Solicitudes) ** 2)
mod1 <- lm(Solicitudes ~ Colegio + scale(Curso), data = dslong_train)
mean((predict(mod1, dslong_test) - dslong_test$Solicitudes) ** 2)
savehistory("~/.Rhistory")
dataschools <- read.csv("3_Data_Munging/csv_files/DataSchools.csv")
setwd("~/Master_Data_Science/TFM/4_Data_Analysis")
dataschools <- read.csv("../3_Data_Munging/csv_files/DataSchools.csv")
dscompletes <- dataschools[complete.cases(dataschools[,11:20]), c(1, 11:26)]
dscompletes$Solicitudes_2017.2018 = NA
dscompletes$Admisiones_2017.2018 = NA
dscompletes <- dscompletes[, c(1:11, 19, 18, 12:17)]
colnames(dscompletes) <- gsub("\\..*","", colnames(dscompletes))
dslong <- reshape(dscompletes, varying = 2:19, sep = "_",
timevar = "Curso", direction = "long")
dslong_2017 <- subset(dslong, Curso == 2017)
dslong_no2017 <- subset(dslong, Curso != 2017)
sol_model <- lmer(log(Solicitudes + 2) ~ Colegio
+ (1 + scale(Curso) | Colegio),
data = dslong_no2017)
library(lme4)
sol_model <- lmer(log(Solicitudes + 2) ~ Colegio
+ (1 + scale(Curso) | Colegio),
data = dslong_no2017)
dslong_2017$Solicitudes <- exp(predict(sol_model, dslong_2017)) - 2
adm_model <- lmer(log(Admisiones + 2) ~ Colegio + scale(Curso) +
log(Solicitudes + 2) +
(1 + scale(Curso) | Colegio), data = dslong_no2017)
dslong_2017$Admisiones <- exp(predict(adm_model, dslong_2017)) - 2
dslong_2017$Admisiones[dslong_2017$Admisiones < 0] <- 0
dslong_2017 <- dslong_2017[, c(1,3,4)]
colnames(dslong_2017) <- c("Colegio", "Admisiones_2017.2018",
"Solicitudes_2017.2018")
dataschools <- merge(dataschools, dslong_2017, by = "Colegio", all = TRUE)
